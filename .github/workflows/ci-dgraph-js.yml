name: ci-dgraph-js-tests
on:
  push:
    paths-ignore:
      - '**/**.dockerignore'
      - '**/**.gitignore'
      - '**/**.md'
      - '**/**.png'
      - '**/**.gif'
      - '**/**.ini'
    branches: 
    - master
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review
    branches: 
    - master
jobs:
  dgraph-js-tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 19.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Checkout dgraph-js repo
      uses: actions/checkout@v4
      with: 
        path: dgraph-js
        repository: dgraph-io/dgraph-js
        ref: ${{ github.ref }}
    - name: Checkout dgraph repo
      uses: actions/checkout@v4
      with:
        path: dgraph
        repository: dgraph-io/dgraph
        ref: main
    - name: Get Go Version
      run: |
        #!/bin/bash
        cd dgraph
        GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
        echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GOVERSION }}
    - name: Build dgraph binary
      run: cd dgraph && make docker-image # also builds dgraph binary
    - name: Move dgraph binary to gopath
      run: cd dgraph && mv dgraph/dgraph ~/go/bin/dgraph
    - name: Setup node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: dgraph-js/package-lock.json
    - name: Run dgraph-js tests
      working-directory: dgraph-js
      run: | 
        npm ci --legacy-peer-deps
        bash scripts/run-tests.sh
